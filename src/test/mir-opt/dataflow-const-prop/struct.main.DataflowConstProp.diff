- // MIR for `main` before DataflowConstProp
+ // MIR for `main` after DataflowConstProp
  
  fn main() -> () {
      let mut _0: ();                      // return place in scope 0 at $DIR/struct.rs:+0:11: +0:11
      let mut _1: S;                       // in scope 0 at $DIR/struct.rs:+1:9: +1:14
      let mut _3: i32;                     // in scope 0 at $DIR/struct.rs:+2:13: +2:16
      let mut _5: i32;                     // in scope 0 at $DIR/struct.rs:+4:13: +4:14
      let mut _6: i32;                     // in scope 0 at $DIR/struct.rs:+4:17: +4:20
      scope 1 {
          debug s => _1;                   // in scope 1 at $DIR/struct.rs:+1:9: +1:14
          let _2: i32;                     // in scope 1 at $DIR/struct.rs:+2:9: +2:10
          scope 2 {
              debug a => _2;               // in scope 2 at $DIR/struct.rs:+2:9: +2:10
              let _4: i32;                 // in scope 2 at $DIR/struct.rs:+4:9: +4:10
              scope 3 {
                  debug b => _4;           // in scope 3 at $DIR/struct.rs:+4:9: +4:10
              }
          }
      }
  
      bb0: {
          StorageLive(_1);                 // scope 0 at $DIR/struct.rs:+1:9: +1:14
          Deinit(_1);                      // scope 0 at $DIR/struct.rs:+1:17: +1:21
          (_1.0: i32) = const 1_i32;       // scope 0 at $DIR/struct.rs:+1:17: +1:21
          StorageLive(_2);                 // scope 1 at $DIR/struct.rs:+2:9: +2:10
          StorageLive(_3);                 // scope 1 at $DIR/struct.rs:+2:13: +2:16
-         _3 = (_1.0: i32);                // scope 1 at $DIR/struct.rs:+2:13: +2:16
-         _2 = Add(move _3, const 2_i32);  // scope 1 at $DIR/struct.rs:+2:13: +2:20
+         _3 = const 1_i32;                // scope 1 at $DIR/struct.rs:+2:13: +2:16
+         _2 = const 3_i32;                // scope 1 at $DIR/struct.rs:+2:13: +2:20
          StorageDead(_3);                 // scope 1 at $DIR/struct.rs:+2:19: +2:20
          (_1.0: i32) = const 3_i32;       // scope 2 at $DIR/struct.rs:+3:5: +3:12
          StorageLive(_4);                 // scope 2 at $DIR/struct.rs:+4:9: +4:10
          StorageLive(_5);                 // scope 2 at $DIR/struct.rs:+4:13: +4:14
-         _5 = _2;                         // scope 2 at $DIR/struct.rs:+4:13: +4:14
+         _5 = const 3_i32;                // scope 2 at $DIR/struct.rs:+4:13: +4:14
          StorageLive(_6);                 // scope 2 at $DIR/struct.rs:+4:17: +4:20
-         _6 = (_1.0: i32);                // scope 2 at $DIR/struct.rs:+4:17: +4:20
-         _4 = Add(move _5, move _6);      // scope 2 at $DIR/struct.rs:+4:13: +4:20
+         _6 = const 3_i32;                // scope 2 at $DIR/struct.rs:+4:17: +4:20
+         _4 = const 6_i32;                // scope 2 at $DIR/struct.rs:+4:13: +4:20
          StorageDead(_6);                 // scope 2 at $DIR/struct.rs:+4:19: +4:20
          StorageDead(_5);                 // scope 2 at $DIR/struct.rs:+4:19: +4:20
          _0 = const ();                   // scope 0 at $DIR/struct.rs:+0:11: +5:2
          StorageDead(_4);                 // scope 2 at $DIR/struct.rs:+5:1: +5:2
          StorageDead(_2);                 // scope 1 at $DIR/struct.rs:+5:1: +5:2
          StorageDead(_1);                 // scope 0 at $DIR/struct.rs:+5:1: +5:2
          return;                          // scope 0 at $DIR/struct.rs:+5:2: +5:2
      }
  }
  
