- // MIR for `baz` before DestinationPropagation
+ // MIR for `baz` after DestinationPropagation
  
  fn baz(_1: i32) -> i32 {
      debug x => _1;                       // in scope 0 at $DIR/copy_propagation_arg.rs:+0:8: +0:13
      let mut _0: i32;                     // return place in scope 0 at $DIR/copy_propagation_arg.rs:+0:23: +0:26
      let mut _2: i32;                     // in scope 0 at $DIR/copy_propagation_arg.rs:+2:9: +2:10
  
      bb0: {
-         StorageLive(_2);                 // scope 0 at $DIR/copy_propagation_arg.rs:+2:9: +2:10
-         _2 = _1;                         // scope 0 at $DIR/copy_propagation_arg.rs:+2:9: +2:10
-         _1 = move _2;                    // scope 0 at $DIR/copy_propagation_arg.rs:+2:5: +2:10
-         StorageDead(_2);                 // scope 0 at $DIR/copy_propagation_arg.rs:+2:9: +2:10
+         nop;                             // scope 0 at $DIR/copy_propagation_arg.rs:+2:9: +2:10
+         nop;                             // scope 0 at $DIR/copy_propagation_arg.rs:+2:9: +2:10
+         nop;                             // scope 0 at $DIR/copy_propagation_arg.rs:+2:5: +2:10
+         nop;                             // scope 0 at $DIR/copy_propagation_arg.rs:+2:9: +2:10
          _0 = _1;                         // scope 0 at $DIR/copy_propagation_arg.rs:+3:5: +3:6
          return;                          // scope 0 at $DIR/copy_propagation_arg.rs:+4:2: +4:2
      }
  }
  
